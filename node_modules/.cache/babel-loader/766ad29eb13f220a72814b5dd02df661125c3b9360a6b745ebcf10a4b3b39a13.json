{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE_URL; // 或您的后端服务器地址\nconst API_BASE_URL = `${API_BASE}/api/courses`; // You might need to adjust this based on your actual API endpoint\n\n// Add a new course\nexport const addCourse = async courseData => {\n  try {\n    const response = await axios.post(API_BASE_URL, courseData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get all courses\nexport const getCourses = async () => {\n  try {\n    const response = await axios.get(API_BASE_URL);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get a single course by ID\nexport const getCourseById = async courseId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update a course by ID\nexport const updateCourse = async (courseId, courseData) => {\n  try {\n    const response = await axios.patch(`${API_BASE_URL}/${courseId}`, courseData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete a course by ID\nexport const deleteCourse = async courseId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const enrollInCourse = async courseId => {\n  try {\n    const token = localStorage.getItem('token'); // 或者从其他地方获取令牌\n    const response = await axios.post(`/api/courses/${courseId}/enroll`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// 获取用户已注册的课程\nexport const getEnrolledCourses = async userId => {\n  try {\n    const token = localStorage.getItem('token'); // 或者从其他地方获取令牌\n    const response = await axios.get(`${API_BASE_URL}/user/${userId}/enrolled`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE_URL","API_BASE_URL","addCourse","courseData","response","post","data","error","getCourses","get","getCourseById","courseId","updateCourse","patch","deleteCourse","delete","enrollInCourse","token","localStorage","getItem","headers","Authorization","getEnrolledCourses","userId"],"sources":["/Users/gucenzhang/web-chess/online-chess-react-platform/src/api/course.js"],"sourcesContent":["import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE_URL; // 或您的后端服务器地址\nconst API_BASE_URL = `${API_BASE}/api/courses`; // You might need to adjust this based on your actual API endpoint\n\n// Add a new course\nexport const addCourse = async (courseData) => {\n  try {\n    const response = await axios.post(API_BASE_URL, courseData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get all courses\nexport const getCourses = async () => {\n  try {\n    const response = await axios.get(API_BASE_URL);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get a single course by ID\nexport const getCourseById = async (courseId) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update a course by ID\nexport const updateCourse = async (courseId, courseData) => {\n  try {\n    const response = await axios.patch(`${API_BASE_URL}/${courseId}`, courseData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete a course by ID\nexport const deleteCourse = async (courseId) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${courseId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const enrollInCourse = async (courseId) => {\n  try {\n    const token = localStorage.getItem('token'); // 或者从其他地方获取令牌\n    const response = await axios.post(`/api/courses/${courseId}/enroll`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// 获取用户已注册的课程\nexport const getEnrolledCourses = async (userId) => {\n  try {\n    const token = localStorage.getItem('token'); // 或者从其他地方获取令牌\n    const response = await axios.get(`${API_BASE_URL}/user/${userId}/enrolled`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}